<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.plantopia.dao.PlantCommentMapper">

    <!-- resultMap -->
    <resultMap id="plantCommentResultMap" type="com.plantopia.dto.PlantCommentDto">
        <id property="placom_idx" column="placom_idx"/>
        <result property="placom_contents" column="placom_contents"/>
        <result property="placom_date" column="placom_date"/>
        <result property="placom_root" column="placom_root"/>
        <result property="placom_step" column="placom_step"/>
        <result property="placom_indent" column="placom_indent"/>
        <result property="user_num" column="user_num"/>
        <result property="pla_idx" column="pla_idx"/>
        <result property="writer" column="writer"/>
    </resultMap>

    <!-- 댓글 목록 조회 - 닉네임 포함 -->
    <select id="selectComments" resultMap="plantCommentResultMap">
        SELECT c.placom_idx, c.placom_contents, 
               c.placom_root, c.placom_step, c.placom_indent,
               c.user_num, c.pla_idx,
               u.user_nickname AS writer,
               c.placom_date
        FROM Plant_Comment c
        JOIN User u ON c.user_num = u.user_num 
        WHERE c.pla_idx = #{pla_idx} 
        ORDER BY c.placom_root ASC, c.placom_step ASC
    </select>

    <!-- 댓글 작성 -->
    <insert id="insertComment" parameterType="com.plantopia.dto.PlantCommentDto"
      useGeneratedKeys="true" keyProperty="placom_idx">
        <!-- 대댓글의 경우 root, step, indent 값 추가 -->
	    <if test="placom_root != null">
	        INSERT INTO Plant_Comment (
	            placom_contents, placom_date, placom_root, placom_step, placom_indent,
	            user_num, pla_idx
	        ) VALUES (
	            #{placom_contents}, NOW(), #{placom_root}, #{placom_step}, #{placom_indent},
	            #{user_num}, #{pla_idx}
	        )
	    </if>
    <!-- 댓글인 경우 일반적인 처리 -->
	    <if test="placom_root == null">
	        INSERT INTO Plant_Comment (
	            placom_contents, placom_date, placom_root, placom_step, placom_indent,
	            user_num, pla_idx
	        ) VALUES (
	            #{placom_contents}, NOW(), NULL, 0, 0,
	            #{user_num}, #{pla_idx}
	        )
	    </if>
    </insert>

    <!-- 최대 step 조회 -->
    <select id="getMaxStep" resultType="int">
        SELECT COALESCE(MAX(placom_step), 0) FROM Plant_Comment WHERE placom_root = #{placom_root}
    </select>

    <!-- step 정렬 갱신 -->
    <update id="updateStepAfter">
        UPDATE Plant_Comment
        SET placom_step = placom_step + 1
        WHERE placom_step >= #{step} AND pla_idx = #{pla_idx}
    </update>

    <!-- 댓글 수정 -->
    <update id="updateComment">
        UPDATE Plant_Comment
        SET placom_contents = #{placom_contents}, placom_date = NOW()
        WHERE placom_idx = #{placom_idx}
    </update>

    <!-- 댓글 삭제 -->
    <delete id="deleteComment">
        DELETE FROM Plant_Comment WHERE placom_idx = #{placom_idx}
    </delete>

    <!-- 댓글 상세 조회 -->
    <select id="selectCommentDetail" resultMap="plantCommentResultMap">
        SELECT 
            c.placom_idx,
            c.placom_contents,
            c.placom_root,
            c.placom_step,
            c.placom_indent,
            c.user_num,
            c.pla_idx,
            u.user_nickname AS writer,
            c.placom_date
        FROM Plant_Comment c
        JOIN User u ON c.user_num = u.user_num
        WHERE c.placom_idx = #{placom_idx}
    </select>
    
    <update id="updateRoot">
    UPDATE Plant_Comment
    SET placom_root = #{placom_idx}
    WHERE placom_idx = #{placom_idx}
	</update>

</mapper>